name: Release

on:
  workflow_dispatch:
    inputs:
      crate:
        description: Crate name to release (e.g. tucano-core)
        required: true
        type: string
      new_version:
        description: New semantic version (e.g. 0.12.3)
        required: true
        type: string
      publish:
        description: Publish to crates.io (ignored if dry_run=true)
        required: true
        default: false
        type: boolean
      dry_run:
        description: Only run packaging checks (no commit / tag / push / publish)
        required: true
        default: true
        type: boolean

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Release Crate
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CARGO_TERM_COLOR: always
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Validate crate exists
        run: |
          if ! grep -R "name = \"${{ inputs.crate }}\"" -n . >/dev/null; then
            echo "Crate ${{ inputs.crate }} not found" >&2
            exit 1
          fi

      - name: Dry run package
        if: inputs.dry_run == true
        run: |
          echo "Running cargo package (dry run) for ${{ inputs.crate }} at version ${{ inputs.new_version }}"
          cargo package -p "${{ inputs.crate }}" --allow-dirty || true
          echo "Dry run complete. No changes committed."

      - name: Configure git user
        if: inputs.dry_run == false
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump version, tag & optionally publish
        if: inputs.dry_run == false
        run: |
          set -euo pipefail
          crate="${{ inputs.crate }}"
          ver="${{ inputs.new_version }}"
          flag=""
          if [ "${{ inputs.publish }}" = "true" ]; then
            flag="--publish"
          fi
          ./scripts/release.sh "$crate" "$ver" $flag

      - name: Push commit & tags
        if: inputs.dry_run == false
        run: |
          git push origin HEAD:main --follow-tags

      - name: Summary
        run: |
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "Dry run complete for ${{ inputs.crate }} ${{ inputs.new_version }} (no commit/tag/publish)." >> $GITHUB_STEP_SUMMARY
          else
            echo "Released ${{ inputs.crate }} ${{ inputs.new_version }} (publish=${{ inputs.publish }})." >> $GITHUB_STEP_SUMMARY
          fi
